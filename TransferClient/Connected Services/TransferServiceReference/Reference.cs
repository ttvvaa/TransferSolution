//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TransferClient.TransferServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransferServiceReference.ITransferService")]
    public interface ITransferService {
        
        // CODEGEN: Generating message contract since the wrapper name (DownloadRequest) of message DownloadRequest does not match the default value (DownloadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/DownloadFile", ReplyAction="http://tempuri.org/ITransferService/DownloadFileResponse")]
        TransferClient.TransferServiceReference.RemoteFileInfo DownloadFile(TransferClient.TransferServiceReference.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/DownloadFile", ReplyAction="http://tempuri.org/ITransferService/DownloadFileResponse")]
        System.Threading.Tasks.Task<TransferClient.TransferServiceReference.RemoteFileInfo> DownloadFileAsync(TransferClient.TransferServiceReference.DownloadRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (DownloadStorageRequest) of message DownloadStorageRequest does not match the default value (DownloadDocumentStorage)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/DownloadDocumentStorage", ReplyAction="http://tempuri.org/ITransferService/DownloadDocumentStorageResponse")]
        TransferClient.TransferServiceReference.DownloadStorageStream DownloadDocumentStorage(TransferClient.TransferServiceReference.DownloadStorageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/DownloadDocumentStorage", ReplyAction="http://tempuri.org/ITransferService/DownloadDocumentStorageResponse")]
        System.Threading.Tasks.Task<TransferClient.TransferServiceReference.DownloadStorageStream> DownloadDocumentStorageAsync(TransferClient.TransferServiceReference.DownloadStorageRequest request);
        
        // CODEGEN: Generating message contract since the operation UploadDocumentStorage is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadDocumentStorage", ReplyAction="http://tempuri.org/ITransferService/UploadDocumentStorageResponse")]
        TransferClient.TransferServiceReference.UploadDocumentStorageResponse UploadDocumentStorage(TransferClient.TransferServiceReference.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadDocumentStorage", ReplyAction="http://tempuri.org/ITransferService/UploadDocumentStorageResponse")]
        System.Threading.Tasks.Task<TransferClient.TransferServiceReference.UploadDocumentStorageResponse> UploadDocumentStorageAsync(TransferClient.TransferServiceReference.RemoteFileInfo request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ExportFileId;
        
        public DownloadRequest() {
        }
        
        public DownloadRequest(string ExportFileId) {
            this.ExportFileId = ExportFileId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, long Length, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadStorageRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadStorageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Customs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string FileGuid;
        
        public DownloadStorageRequest() {
        }
        
        public DownloadStorageRequest(string Customs, string FileGuid) {
            this.Customs = Customs;
            this.FileGuid = FileGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadStorageStream", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadStorageStream {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream Data;
        
        public DownloadStorageStream() {
        }
        
        public DownloadStorageStream(long Length, System.IO.Stream Data) {
            this.Length = Length;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadDocumentStorageResponse {
        
        public UploadDocumentStorageResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransferServiceChannel : TransferClient.TransferServiceReference.ITransferService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransferServiceClient : System.ServiceModel.ClientBase<TransferClient.TransferServiceReference.ITransferService>, TransferClient.TransferServiceReference.ITransferService {
        
        public TransferServiceClient() {
        }
        
        public TransferServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TransferClient.TransferServiceReference.RemoteFileInfo TransferClient.TransferServiceReference.ITransferService.DownloadFile(TransferClient.TransferServiceReference.DownloadRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public string DownloadFile(string ExportFileId, out long Length, out System.IO.Stream FileByteStream) {
            TransferClient.TransferServiceReference.DownloadRequest inValue = new TransferClient.TransferServiceReference.DownloadRequest();
            inValue.ExportFileId = ExportFileId;
            TransferClient.TransferServiceReference.RemoteFileInfo retVal = ((TransferClient.TransferServiceReference.ITransferService)(this)).DownloadFile(inValue);
            Length = retVal.Length;
            FileByteStream = retVal.FileByteStream;
            return retVal.FileName;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TransferClient.TransferServiceReference.RemoteFileInfo> TransferClient.TransferServiceReference.ITransferService.DownloadFileAsync(TransferClient.TransferServiceReference.DownloadRequest request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<TransferClient.TransferServiceReference.RemoteFileInfo> DownloadFileAsync(string ExportFileId) {
            TransferClient.TransferServiceReference.DownloadRequest inValue = new TransferClient.TransferServiceReference.DownloadRequest();
            inValue.ExportFileId = ExportFileId;
            return ((TransferClient.TransferServiceReference.ITransferService)(this)).DownloadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TransferClient.TransferServiceReference.DownloadStorageStream TransferClient.TransferServiceReference.ITransferService.DownloadDocumentStorage(TransferClient.TransferServiceReference.DownloadStorageRequest request) {
            return base.Channel.DownloadDocumentStorage(request);
        }
        
        public long DownloadDocumentStorage(string Customs, string FileGuid, out System.IO.Stream Data) {
            TransferClient.TransferServiceReference.DownloadStorageRequest inValue = new TransferClient.TransferServiceReference.DownloadStorageRequest();
            inValue.Customs = Customs;
            inValue.FileGuid = FileGuid;
            TransferClient.TransferServiceReference.DownloadStorageStream retVal = ((TransferClient.TransferServiceReference.ITransferService)(this)).DownloadDocumentStorage(inValue);
            Data = retVal.Data;
            return retVal.Length;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TransferClient.TransferServiceReference.DownloadStorageStream> TransferClient.TransferServiceReference.ITransferService.DownloadDocumentStorageAsync(TransferClient.TransferServiceReference.DownloadStorageRequest request) {
            return base.Channel.DownloadDocumentStorageAsync(request);
        }
        
        public System.Threading.Tasks.Task<TransferClient.TransferServiceReference.DownloadStorageStream> DownloadDocumentStorageAsync(string Customs, string FileGuid) {
            TransferClient.TransferServiceReference.DownloadStorageRequest inValue = new TransferClient.TransferServiceReference.DownloadStorageRequest();
            inValue.Customs = Customs;
            inValue.FileGuid = FileGuid;
            return ((TransferClient.TransferServiceReference.ITransferService)(this)).DownloadDocumentStorageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TransferClient.TransferServiceReference.UploadDocumentStorageResponse TransferClient.TransferServiceReference.ITransferService.UploadDocumentStorage(TransferClient.TransferServiceReference.RemoteFileInfo request) {
            return base.Channel.UploadDocumentStorage(request);
        }
        
        public void UploadDocumentStorage(string FileName, long Length, System.IO.Stream FileByteStream) {
            TransferClient.TransferServiceReference.RemoteFileInfo inValue = new TransferClient.TransferServiceReference.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            TransferClient.TransferServiceReference.UploadDocumentStorageResponse retVal = ((TransferClient.TransferServiceReference.ITransferService)(this)).UploadDocumentStorage(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TransferClient.TransferServiceReference.UploadDocumentStorageResponse> TransferClient.TransferServiceReference.ITransferService.UploadDocumentStorageAsync(TransferClient.TransferServiceReference.RemoteFileInfo request) {
            return base.Channel.UploadDocumentStorageAsync(request);
        }
        
        public System.Threading.Tasks.Task<TransferClient.TransferServiceReference.UploadDocumentStorageResponse> UploadDocumentStorageAsync(string FileName, long Length, System.IO.Stream FileByteStream) {
            TransferClient.TransferServiceReference.RemoteFileInfo inValue = new TransferClient.TransferServiceReference.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            return ((TransferClient.TransferServiceReference.ITransferService)(this)).UploadDocumentStorageAsync(inValue);
        }
    }
}
